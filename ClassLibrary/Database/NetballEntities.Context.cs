

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace ClassLibrary.Database
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class NetballEntities : DbContext
{
    public NetballEntities()
        : base("name=NetballEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<Coach> Coaches { get; set; }

    public virtual DbSet<Court> Courts { get; set; }

    public virtual DbSet<Division> Divisions { get; set; }

    public virtual DbSet<Game> Games { get; set; }

    public virtual DbSet<GamePlayer> GamePlayers { get; set; }

    public virtual DbSet<GameQuarter> GameQuarters { get; set; }

    public virtual DbSet<GameTeam> GameTeams { get; set; }

    public virtual DbSet<Person> People { get; set; }

    public virtual DbSet<QuarterType> QuarterTypes { get; set; }

    public virtual DbSet<sysdiagram> sysdiagrams { get; set; }

    public virtual DbSet<Team> Teams { get; set; }

    public virtual DbSet<TeamPlayer> TeamPlayers { get; set; }

    public virtual DbSet<Tournament> Tournaments { get; set; }

    public virtual DbSet<AwardPerson> AwardPersons { get; set; }

    public virtual DbSet<Award> Awards { get; set; }

    public virtual DbSet<CoachAssistant> CoachAssistants { get; set; }

    public virtual DbSet<CommitteePerson> CommitteePersons { get; set; }

    public virtual DbSet<CommitteePosition> CommitteePositions { get; set; }

    public virtual DbSet<TeamPlayerStatu> TeamPlayerStatus { get; set; }

    public virtual DbSet<VolunteerPerson> VolunteerPersons { get; set; }

    public virtual DbSet<VolunteerTitle> VolunteerTitles { get; set; }


    public virtual int spPopulateGame()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPopulateGame");
    }


    public virtual int spPopulateGamePlayer()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPopulateGamePlayer");
    }


    public virtual int spPopulateGameTeam()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPopulateGameTeam");
    }


    public virtual int spPopulatePerson()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPopulatePerson");
    }


    public virtual int spPopulateTeamPlayer()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPopulateTeamPlayer");
    }


    public virtual int UpdatePerson(Nullable<int> personID, string firstName)
    {

        var personIDParameter = personID.HasValue ?
            new ObjectParameter("PersonID", personID) :
            new ObjectParameter("PersonID", typeof(int));


        var firstNameParameter = firstName != null ?
            new ObjectParameter("FirstName", firstName) :
            new ObjectParameter("FirstName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePerson", personIDParameter, firstNameParameter);
    }

}

}

