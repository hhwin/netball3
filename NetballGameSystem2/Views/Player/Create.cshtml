@model ClassLibrary.Models.PlayerModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PlayerModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="container">
            <div class="row">
                <div class="col-md-1">
                    @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label; width=100px" })
                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control; width=150px" } })
                </div>
                <div class="col-md-1">
                    @Html.LabelFor(model => model.middleName, htmlAttributes: new { @class = "control-label; width=100px" })
                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.middleName, new { htmlAttributes = new { @class = "form-control; width=150px" } })
                    @Html.ValidationMessageFor(model => model.middleName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-1">
                    @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label; width=50px" })
                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control; width=150px" } })
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-offset-9">
                    @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-1">
                    @Html.LabelFor(model => model.mobile, htmlAttributes: new { @class = "control-label; width=50px" })
                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.mobile, new { htmlAttributes = new { @class = "form-control; width=150px" } })
                    @Html.ValidationMessageFor(model => model.mobile, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-1">
                    @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label;width=50px" })
                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control; width=150px" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row"><br /></div>
            <div class="row">
                <div class="col-md-1">
                    @Html.LabelFor(model => model.emergencyContact, htmlAttributes: new { @class = "control-label col-md-2;width=50px" })
                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.emergencyContact, new { htmlAttributes = new { @class = "form-control;width=150px" } })
                    @Html.ValidationMessageFor(model => model.emergencyContact, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-1">
                    @Html.LabelFor(model => model.emergencyContactNo, htmlAttributes: new { @class = "control-label col-md-2;width=50px" })
                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.emergencyContactNo, new { htmlAttributes = new { @class = "form-control;width=150px" } })
                    @Html.ValidationMessageFor(model => model.emergencyContactNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-1">
                    @Html.LabelFor(model => model.teamName, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.teamID,
                        new SelectList(ClassLibrary.Logic.Team.TeamSelectList.GetTeamSelectListStatic(0),
                        "Value",
                        "Text",
                        Model.teamID),
                        new { id = "teamID", style = "width: 150px; height: 30px" }
                    )
                </div>
                <div class="col-md-1">
                    @Html.LabelFor(model => model.captain, htmlAttributes: new { @class = "control-label col-md-2; width=50px" })
                </div>
                <div class="col-md-3">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.captain)
                        @Html.ValidationMessageFor(model => model.captain, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    @Html.ValidationMessageFor(model => model.teamID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @Html.HiddenFor(model => model.teamID)
        @Html.HiddenFor(model => model.teamName)

        <div class="form-group">
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.playerName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.playerName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.playerName, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@if (TempData["statusMessage"] != null)
{
    <script type="text/javascript">
       alert("@TempData["statusMessage"]");
    </script>
}