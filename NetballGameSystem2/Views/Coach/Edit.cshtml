@model ClassLibrary.Models.CoachModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>CoachModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.personID)
    @*
        @Html.HiddenFor(model => model.teamID)
    *@

    <div class="container">
        <div class="row">
            <div class="col-md-1">
                @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label; width= 100px" })
            </div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control; width=150px" } })
                @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-1">
                @Html.LabelFor(model => model.middleName, htmlAttributes: new { @class = "control-label; width=100px" })
            </div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.middleName, new { htmlAttributes = new { @class = "form-control; width=150px" } })
                @Html.ValidationMessageFor(model => model.middleName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-1">
                @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label; width=50px" })
            </div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control; width=150px" } })
                @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <p style="margin-top:0; margin-bottom:0; line-height:.5"><br /></p>
        <div class="row">
            <div class="col-md-1">
                @Html.LabelFor(model => model.mobile, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mobile, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-1">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>
        <p style="margin-top:0; margin-bottom:0; line-height:1.5"><br /></p>
        <div class="row">
            <div class="col-md-1">
                @Html.LabelFor(model => model.emergencyContact, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.emergencyContact, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emergencyContact, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-1">
                @Html.LabelFor(model => model.emergencyContactNo, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.emergencyContactNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emergencyContactNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <p style="margin-top:0; margin-bottom:0; line-height:1.5"><br /></p>
        <div class="row">
            <div class="col-md-1">
                @Html.LabelFor(model => model.teamName, htmlAttributes: new { @class = "control-label; width: 150px" })
            </div>
            <div class="col-md-5">           
                @Html.DropDownListFor(model => model.teamID,
                    new SelectList(ClassLibrary.Logic.Team.TeamSelectList.GetTeamSelectListStatic(Model.teamID),
                    "Value",
                    "Text",
                    Model.teamID),
                    new { id = "teamID", style = "width: 150px; height: 30px" }
                )
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
